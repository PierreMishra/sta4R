abc <- get_things(api=api, iot_id = 2)
library(httr)
library(jsonlite)
api <- "http://sta-demo.internetofwater.dev/api/v1.1"
paste0(api, "/Things?$filter=@iot.id eq ", 2)
api <- "http://sta-demo.internetofwater.dev/api/v1.1"
# get things (by iot_id & name)
get_things <- function(api, iot_id = NULL, name = NULL) {
if (is.null(iot_id) & is.null(name)){
x <- GET(url = paste0(api, "/Things"))
df <- fromJSON(as.character(x))
return (df)
} else if (is.null(iot_id)) {
x <- GET (url = paste0(api, "/Things?$filter=name eq ", name))
df <- fromJSON(as.character(x))
return (df)
} else if (is.null(name)) {
x <- GET (url = paste0(api, "/Things?$filter=@iot.id%20eq%20", iot_id))
df <- fromJSON(as.character(x))
return (df)
}
}
abc <- get_things(api=api, iot_id = 2)
View(abc)
# get things (by iot_id & name)
get_things <- function(api, iot_id = NULL, name = NULL) {
if (is.null(iot_id) & is.null(name)){
x <- GET(url = paste0(api, "/Things"))
df <- fromJSON(as.character(x))
return (df)
} else if (is.null(iot_id)) {
x <- GET (url = paste0(api, "/Things?$filter=name%20eq%20%27", name, "%27"))
df <- fromJSON(as.character(x))
return (df)
} else if (is.null(name)) {
x <- GET (url = paste0(api, "/Things?$filter=@iot.id%20eq%20", iot_id))
df <- fromJSON(as.character(x))
return (df)
}
}
abc <- get_things(api=api, name = "TV-157")
# get things (by iot_id & name)
get_things <- function(api, iot_id = NULL, name = NULL) {
if (is.null(iot_id) & is.null(name)){
x <- GET(url = paste0(api, "/Things"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id)) {
x <- GET (url = paste0(api, "/Things?$filter=name%20eq%20%27", name, "%27"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(name)) {
x <- GET (url = paste0(api, "/Things?$filter=@iot.id%20eq%20", iot_id))
df <- fromJSON(as.character(x))
return (df$value)
}
}
abc <- get_things(api=api, name = "TV-157")
View(abc)
abc <- get_things(api=api)
View(abc)
# get location
get_location <- function (api){
x <- GET(url = paste0(api, "/Locations"))
return (x)
}
L <- get_location(api)
View(L)
paste0(api, "/Locations")
# get location
get_location <- function (api){
x <- GET(url = paste0(api, "/Locations"))
return (x$value)
}
L <- get_location(api)
# get location
get_location <- function (api){
x <- GET(url = paste0(api, "/Locations"))
return (x)
}
L <- get_location(api)
# get location
get_location <- function (api){
x <- GET(url = paste0(api, "/Locations"))
df <- fromJSON(as.character(x))
return (df)
}
L <- get_location(api)
View(L)
L <- get_location(api)
# get location
get_location <- function (api){
x <- GET(url = paste0(api, "/Locations"))
df <- fromJSON(as.character(x))
return (df$value)
}
L <- get_location(api)
View(L)
z <- c(1,2)
z
location.type <- "point"
location.coordinates <- c(-105.795, 32.8542)
paste0(api, "/Locations?$filter=st_equals(location,geography'",
toupper(location.type), "(", location.coordinates, "')" )
paste0(location.coordinates)
print(location.coordinates)
# get location (iot_id, location.coordinates)
get_location <- function (api, iot_id=NULL, location.coordinates=NULL, location.type=NULL){
if (is.null(iot_id) & is.null(location.coordinates) & is.null(location.type)){
x <- GET(url = paste0(api, "/Locations"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(location.coordinates)){
x <- GET(url = paste0(api, "/Locations?$filter=@iot.id%20eq%20", iot_id))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id)){
len <- lengt
x <- GET(url = paste0(api, "/Locations?$filter=st_equals(location,geography'",
toupper(location.type), "(", location.coordinates[1], ")')" ))
df <- fromJSON(as.character(x))
return (df$value)
}
}
paste0(api, "/Locations?$filter=st_equals(location,geography'",
toupper(location.type), "(", location.coordinates[1], ")')" )
paste0(api, "/Locations?$filter=st_equals(location,geography'",
toupper(location.type), "(", location.coordinates[1],
location.coordinates[2] ")')" )
paste0(api, "/Locations?$filter=st_equals(location,geography'",
toupper(location.type), "(", location.coordinates[1],
location.coordinates[2], ")')" )
paste0(api, "/Locations?$filter=st_equals(location,geography'",
toupper(location.type), "(", location.coordinates[1], " ",
location.coordinates[2], ")')" )
get(location.coordinates)
paste(location.coordinates)
c(paste(location.coordinates))
paste(c(location.coordinates))
paste0(api, "/Locations?$filter=st_equals(location,geography'",
toupper(location.type), "(", paste(c(location.coordinates), collapse = " "), ")')" )
# get location (iot_id, location.coordinates)
get_location <- function (api, iot_id=NULL, location.coordinates=NULL, location.type=NULL){
if (is.null(iot_id) & is.null(location.coordinates) & is.null(location.type)){
x <- GET(url = paste0(api, "/Locations"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(location.coordinates)){
x <- GET(url = paste0(api, "/Locations?$filter=@iot.id%20eq%20", iot_id))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id)){
x <- GET(url = paste0(api, "/Locations?$filter=st_equals(location,geography'",
toupper(location.type), "(", paste(c(location.coordinates), collapse = " "), ")')" ))
df <- fromJSON(as.character(x))
return (df$value)
}
}
L <- get_location(api, location.coordinates = location.coordinates)
# get location (iot_id, location.coordinates)
get_location <- function (api, iot_id=NULL, location.coordinates=NULL, location.type=NULL){
if (is.null(iot_id) & is.null(location.coordinates) & is.null(location.type)){
x <- GET(url = paste0(api, "/Locations"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(location.coordinates)){
x <- GET(url = paste0(api, "/Locations?$filter=@iot.id%20eq%20", iot_id))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id)){
x <- GET(url = paste0(api, "/Locations?$filter=st_equals(location,geography%27",
toupper(location.type), "(", paste(c(location.coordinates), collapse = "%20"), ")%27)" ))
df <- fromJSON(as.character(x))
return (df$value)
}
}
L <- get_location(api, location.coordinates = location.coordinates)
lc <- c(-105.795, 32.8542)
L <- get_location(api, location.coordinates = lc)
L
type <- "point"
L <- get_location(api, location.coordinates = lc, location.type = type)
L
library(httr)
library(jsonlite)
api <- "http://sta-demo.internetofwater.dev/api/v1.1"
# get things (by iot_id & name)
get_things <- function(api, iot_id = NULL, name = NULL) {
if (is.null(iot_id) & is.null(name)){
x <- GET(url = paste0(api, "/Things"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id)) {
x <- GET (url = paste0(api, "/Things?$filter=name%20eq%20%27", name, "%27"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(name)) {
x <- GET (url = paste0(api, "/Things?$filter=@iot.id%20eq%20", iot_id))
df <- fromJSON(as.character(x))
return (df$value)
}
}
# get location (iot_id, location.coordinates)
get_location <- function (api, iot_id=NULL, location.coordinates=NULL, location.type=NULL){
if (is.null(iot_id) & is.null(location.coordinates) & is.null(location.type)){
x <- GET(url = paste0(api, "/Locations"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(location.coordinates)){
x <- GET(url = paste0(api, "/Locations?$filter=@iot.id%20eq%20", iot_id))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id)){
x <- GET(url = paste0(api, "/Locations?$filter=st_equals(location,geography%27",
toupper(location.type), "(", paste(c(location.coordinates), collapse = "%20"), ")%27)" ))
df <- fromJSON(as.character(x))
return (df$value)
}
}
# get location (iot_id, location.coordinates)
get_locations <- function (api, iot_id=NULL, location.coordinates=NULL, location.type=NULL){
if (is.null(iot_id) & is.null(location.coordinates) & is.null(location.type)){
x <- GET(url = paste0(api, "/Locations"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(location.coordinates)){
x <- GET(url = paste0(api, "/Locations?$filter=@iot.id%20eq%20", iot_id))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id)){
x <- GET(url = paste0(api, "/Locations?$filter=st_equals(location,geography%27",
toupper(location.type), "(", paste(c(location.coordinates), collapse = "%20"), ")%27)" ))
df <- fromJSON(as.character(x))
return (df$value)
}
}
abc <- get_locations(api)
View(abc)
# get location (iot_id, location.coordinates, name)
get_locations <- function (api, iot_id=NULL, name = NULL, location.coordinates=NULL, location.type=NULL){
if (is.null(iot_id) & is.null(name) & is.null(location.coordinates) & is.null(location.type)){
x <- GET(url = paste0(api, "/Locations"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id) & is.null(location.coordinates) & is.null(location.type)){
x <- GET(url = paste0(api, "/Locations?$filter=name%20eq%20", name))
}
else if (is.null(location.coordinates)){
x <- GET(url = paste0(api, "/Locations?$filter=@iot.id%20eq%20", iot_id))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id)){
x <- GET(url = paste0(api, "/Locations?$filter=st_equals(location,geography%27",
toupper(location.type), "(", paste(c(location.coordinates), collapse = "%20"), ")%27)" ))
df <- fromJSON(as.character(x))
return (df$value)
}
}
get_locations(api = api)
name <- "MBOWN-208 - 29S.02E.13.113A"
get_locaions(api=api, name=name)
# type <- "point"
# lc <- c(-105.795, 32.8542)
# L <- get_location(api, location.coordinates = lc, location.type = type)
abc <- get_locations(api=api, name=name)
# get location (iot_id, location.coordinates, name)
get_locations <- function (api, iot_id=NULL, name = NULL, location.coordinates=NULL, location.type=NULL){
if (is.null(iot_id) & is.null(name) & is.null(location.coordinates) & is.null(location.type)){
x <- GET(url = paste0(api, "/Locations"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id) & is.null(location.coordinates) & is.null(location.type)){
x <- GET(url = paste0(api, "/Locations?$filter=name%20eq%20", name))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(location.coordinates)){
x <- GET(url = paste0(api, "/Locations?$filter=@iot.id%20eq%20", iot_id))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id)){
x <- GET(url = paste0(api, "/Locations?$filter=st_equals(location,geography%27",
toupper(location.type), "(", paste(c(location.coordinates), collapse = "%20"), ")%27)" ))
df <- fromJSON(as.character(x))
return (df$value)
}
}
# type <- "point"
# lc <- c(-105.795, 32.8542)
# L <- get_location(api, location.coordinates = lc, location.type = type)
abc <- get_locations(api=api, name=name)
# type <- "point"
# lc <- c(-105.795, 32.8542)
# L <- get_location(api, location.coordinates = lc, location.type = type)
abc <- get_locations(api=api, name="TV-157")
# type <- "point"
# lc <- c(-105.795, 32.8542)
# L <- get_location(api, location.coordinates = lc, location.type = type)
abc <- get_locations(api=api, name="MBOWN-208 - 29S.02E.13.113A")
# get location (iot_id, location.coordinates, name)
get_locations <- function (api, iot_id=NULL, name = NULL, location.coordinates=NULL, location.type=NULL){
if (is.null(iot_id) & is.null(name) & is.null(location.coordinates) & is.null(location.type)){
x <- GET(url = paste0(api, "/Locations"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id) & is.null(location.coordinates) & is.null(location.type)){
name <- gsub(" ","%20",name)
x <- GET(url = paste0(api, "/Locations?$filter=name%20eq%20", name))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(location.coordinates)){
x <- GET(url = paste0(api, "/Locations?$filter=@iot.id%20eq%20", iot_id))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id)){
x <- GET(url = paste0(api, "/Locations?$filter=st_equals(location,geography%27",
toupper(location.type), "(", paste(c(location.coordinates), collapse = "%20"), ")%27)" ))
df <- fromJSON(as.character(x))
return (df$value)
}
}
# type <- "point"
# lc <- c(-105.795, 32.8542)
# L <- get_location(api, location.coordinates = lc, location.type = type)
abc <- get_locations(api=api, name="MBOWN-208 - 29S.02E.13.113A")
name <- "MBOWN-208 - 29S.02E.13.113A"
paste0(api, "/Locations?$filter=name%20eq%20", name)
# get location (iot_id, location.coordinates, name)
get_locations <- function (api, iot_id=NULL, name = NULL, location.coordinates=NULL, location.type=NULL){
if (is.null(iot_id) & is.null(name) & is.null(location.coordinates) & is.null(location.type)){
x <- GET(url = paste0(api, "/Locations"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id) & is.null(location.coordinates) & is.null(location.type)){
name <- gsub(" ","%20",name)
x <- GET(url = paste0(api, "/Locations?$filter=name%20eq%20%27", name, "%27"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(location.coordinates)){
x <- GET(url = paste0(api, "/Locations?$filter=@iot.id%20eq%20", iot_id))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id)){
x <- GET(url = paste0(api, "/Locations?$filter=st_equals(location,geography%27",
toupper(location.type), "(", paste(c(location.coordinates), collapse = "%20"), ")%27)" ))
df <- fromJSON(as.character(x))
return (df$value)
}
}
name <- "MBOWN-208 - 29S.02E.13.113A"
# type <- "point"
# lc <- c(-105.795, 32.8542)
# L <- get_location(api, location.coordinates = lc, location.type = type)
abc <- get_locations(api=api, name=name)
View(abc)
# get datastreams
get_datastreams <- function (api){
x <- GET(url = paste0(api, "/Datastreams"))
df <- fromJSON(as.character(x))
return (df$value)
}
get_datastreams(api)
bdc <- get_datastreams(api = api)
View(bdc)
library(httr)
library(jsonlite)
api <- "http://sta-demo.internetofwater.dev/api/v1.1"
# get things (by iot_id & name)
get_things <- function(api, iot_id = NULL, name = NULL) {
if (is.null(iot_id) & is.null(name)){
x <- GET(url = paste0(api, "/Things"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id)) {
x <- GET (url = paste0(api, "/Things?$filter=name%20eq%20%27", name, "%27"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(name)) {
x <- GET (url = paste0(api, "/Things?$filter=@iot.id%20eq%20", iot_id))
df <- fromJSON(as.character(x))
return (df$value)
}
}
#iot_id <- 2
#name <- 'TV-157'
abc <- get_things(api=api, name = "TV-157")
View(abc)
#iot_id <- 2
#name <- 'TV-157'
abc <- get_things(api=api,iot_id <- 2)
# get location (iot_id, location.coordinates, name) description too ????
get_locations <- function (api, iot_id=NULL, name=NULL, location.coordinates=NULL, location.type=NULL){
if (is.null(iot_id) & is.null(name) & is.null(location.coordinates) & is.null(location.type)){
x <- GET(url = paste0(api, "/Locations"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id) & is.null(location.coordinates) & is.null(location.type)){
name <- gsub(" ","%20",name)
x <- GET(url = paste0(api, "/Locations?$filter=name%20eq%20%27", name, "%27"))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(location.coordinates)){
x <- GET(url = paste0(api, "/Locations?$filter=@iot.id%20eq%20", iot_id))
df <- fromJSON(as.character(x))
return (df$value)
}
else if (is.null(iot_id)){
x <- GET(url = paste0(api, "/Locations?$filter=st_equals(location,geography%27",
toupper(location.type), "(", paste(c(location.coordinates), collapse = "%20"), ")%27)" ))
df <- fromJSON(as.character(x))
return (df$value)
}
}
abc <- get_locations(api=api)
View(abc)
install.packages("sos4R")
library("sos4R")
install.packages("sos4R_0.4.2.tar.gz", repos=NULL, type="source")
library(httr)
library(jsonlite)
api <- "http://sta-demo.internetofwater.dev/api/v1.1"
library(httr)
library(jsonlite)
api <- "http://sta-demo.internetofwater.dev/api/v1.1"
get_things <- function(api){
x <- GET(url = paste0(api, "/Things"))
df <- fromJSON(as.character(x))
return (df$value)
}
abc <- get_things(api=api)
# Get things by IoT ID
get_things_by_id <- function(api, id){
x <- GET(url = paste0(api, "/Things(", id, ")"))
df <- fromJSON(as.character(x))
return (df$value)
}
abc <- get_things_by_id(api, 1)
id <- 1
paste0(api, "/Things(", id, ")")
paste0(api, "/Things?$filter=@iot.id%20eq%20", id)
id <- 201
# Get things by IoT ID
get_things_by_id <- function(api, id){
x <- GET(url = paste0(api, "/Things?$filter=@iot.id%20eq%", id))
df <- fromJSON(as.character(x))
return (df$value)
}
abc <- get_things_by_id(api, 1)
# Get things by IoT ID
get_things_by_id <- function(api, id){
x <- GET(url = paste0(api, "/Things?$filter=@iot.id%20eq%20", id))
df <- fromJSON(as.character(x))
return (df$value)
}
abc <- get_things_by_id(api, 1)
# Get things by thing's name
get_things_by_name <- function(api, name){
x <- GET(url = paste0(api, "/Things?$filter=name%20eq%20%27", name, "%27"))
df <- fromJSON(as.character(x))
return (df$value)
}
name <- 354017108445201
# Get things by thing's name
get_things_by_name <- function(api, name){
x <- GET(url = paste0(api, "/Things?$filter=name%20eq%20%27", name, "%27"))
df <- fromJSON(as.character(x))
return (df$value)
}
abc <-  get_things_by_name(api, name = name)
name <- '354017108445201'
abc <-  get_things_by_name(api, name = name)
get_things_by_optional_property <- function(api, prop.name, prop.value){
prop.value <- gsub(" ","%20",prop.value)
x <- GET(url = paste0(api, "/Things?$filter=properties/", prop.name,
"%20eq%20%27", prop.value, "%27"))
df <- fromJSON(as.character(x))
return (df$value)
}
get_things_by_optional_property(api,Aquifer,Colorado Plateaus aquifers)
get_things_by_optional_property(api,"Aquifer","Colorado Plateaus aquifers")
prop.name <- "ThingDataProvider"
prop.value <- "U.S. Geological Survey"
abc <- get_things_by_optional_property(api, prop.name, prop.value)
View(abc)
